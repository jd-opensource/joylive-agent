agent:
  enhance:
    javaVersion: '[,1.8);[1.8.0_60,]'
    retransformEnabled: true
    poolEnabled: true
    loggerEnabled: true
    exporterEnabled: false
    excludePrefixes: null
    excludeTypes: null
    excludeInterfaces: null
    excludeClassLoaders:
      - com.jd.jr.sgm.agent.loader.ClientLibClassLoader
      - com.jd.jr.sgm.agent.loader.ClientAppClassLoader
      - com.jd.pfinder.profiler.load.InterceptorClassLoader
      - com.jd.pfinder.profiler.utils.ModuleClassLoader
      - com.jd.pfinder.profiler.load.ModuleInterceptorClassLoader
      - io.opentelemetry.javaagent.bootstrap.AgentClassLoader
      - io.opentelemetry.javaagent.tooling.ExtensionClassLoader
      - org.apache.skywalking.apm.agent.core.plugin.loader.AgentClassLoader
      - org.apache.skywalking.apm.agent.core.plugin.loader.PluginClassLoader
      - com.navercorp.pinpoint.bootstrap.classloader.AgentClassLoader
      - com.navercorp.pinpoint.bootstrap.classloader.PluginClassLoader
      - com.huaweicloud.sermant.core.classloader.FrameworkClassLoader
      - com.huaweicloud.sermant.core.plugin.classloader.PluginClassLoader
      - com.huaweicloud.sermant.core.plugin.classloader.ServiceClassLoader
      - com.alipay.sofa.ark.container.service.classloader.PluginClassLoader
  publisher:
    configs:
      traffic:
        capacity: ${CONFIG_TRAFFIC_BUFFER_SIZE:40000}
  plugin:
    systems:
      - system
    statics:
      - dubbo
      - grpc
      - httpclient
      - jdk
      - kafka
      - mariadb
      - mongodb
      - nacos
      - netty
      - okhttp
      - opengauss
      - postgresql
      - pulsar
      - rabbitmq
      - redis
      - rocketmq
      - sofarpc
      - spring
    disables: null
    dynamics: null
    profiles:
      test: null
      production: null
    profile: null
  sync:
    liveSpace:
      type: ${CONFIG_LIVE_SPACE_API_TYPE:file} # [file,multilive,multilive-openapi,nacos]
      url: ${CONFIG_LIVE_SPACE_API_URL:http://api.live.local:9090/v1}
      service: true
      interval: 3000
      timeout: 3000
      initialTimeout: 20000
      delay: 0
      fault: 5000
      headers: ${CONFIG_LIVE_SPACE_API_HEADERS}
      # for multilive
      multilive:
        spacesUrl: /workspaces
        spaceUrl: /workspaces/${space_id}/version/${space_version}
        serviceUrl: /services/${service_name}/version/${service_version}
      # for multilive-openapi
      jdcloud:
        accessKey: ${CONFIG_MULTILIVE_ACCESS_KEY}
        secretKey: ${CONFIG_MULTILIVE_SECRET_KEY}
      # for nacos
      nacos:
        username: ${CONFIG_NACOS_USERNAME:nacos}
        password: ${CONFIG_NACOS_PASSWORD:nacos}
        namespace: ${CONFIG_NACOS_NAMESPACE:public}
        liveSpaceGroup: ${CONFIG_NACOS_GROUP_LIVE_SPACE:DEFAULT_GROUP}
        liveSpacesKey: ${CONFIG_NACOS_KEY_LIVE_SPACES:govern-liveSpaces}
        liveSpaceKeyTemplate: ${CONFIG_NACOS_KEY_LIVE_SPACE_TEMPLATE:govern-liveSpace-${id}}
        liveServiceTemplate: ${CONFIG_NACOS_KEY_LIVE_SERVICE_TEMPLATE:govern-liveService-${name}}
    laneSpace:
      type: ${CONFIG_LANE_SPACE_API_TYPE:file} # [file,jmsf,nacos]
      url: ${CONFIG_LANE_SPACE_API_URL:http://api.jmsf.local:8080/v1}
      interval: 3000
      timeout: 3000
      initialTimeout: 20000
      delay: 0
      fault: 5000
      # for jmsf
      jmsf:
        spacesUrl: /laneSpaces
        spaceUrl: /laneSpace/${space_id}/version/${space_version}
      # for nacos
      nacos:
        username: ${CONFIG_NACOS_USERNAME:nacos}
        password: ${CONFIG_NACOS_PASSWORD:nacos}
        namespace: ${CONFIG_NACOS_NAMESPACE:public}
        laneSpaceGroup: ${CONFIG_NACOS_GROUP_LANE_SPACE:DEFAULT_GROUP}
        laneSpacesKey: ${CONFIG_NACOS_KEY_LANE_SPACES:govern-laneSpaces}
        laneSpaceKeyTemplate: ${CONFIG_NACOS_KEY_LANE_SPACE_TEMPLATE:govern-laneSpace-${id}}
    microservice:
      type: ${CONFIG_SERVICE_API_TYPE:file} # [file,jmsf,nacos]
      url: ${CONFIG_SERVICE_API_URL:http://api.jmsf.local:8080/v1}
      headers: ${CONFIG_SERVICE_API_HEADERS}
      interval: 3000
      timeout: 3000
      initialTimeout: 20000
      delay: 0
      fault: 5000
      # for jmsf
      jmsf:
        serviceUrl: /space/${space}/service/${service_name}/version/${service_version}?application=${application}
      # for nacos
      nacos:
        username: ${CONFIG_NACOS_USERNAME:nacos}
        password: ${CONFIG_NACOS_PASSWORD:nacos}
        namespace: ${CONFIG_NACOS_NAMESPACE:public}
        serviceGroup: ${CONFIG_NACOS_GROUP_SERVICE:DEFAULT_GROUP}
        serviceKeyTemplate: ${CONFIG_NACOS_KEY_SERVICE_TEMPLATE:govern-service-${name}}
  watchdog:
    enabled: true
    delay: 5000
    interval: 100
    timeout: 5000
  switch:
    live:
      enabled: ${CONFIG_LIVE_ENABLED:false}
      mq: ${CONFIG_LIVE_MQ_ENABLED:false}
      dubbo: true
      grpc: true
      sofarpc: true
      jsf: true
      spring: true
      phevos: true
      rocketmq: true
    lane:
      enabled: ${CONFIG_LANE_ENABLED:${CONFIG_FLOW_CONTROL_ENABLED}}
    transmission:
      enabled: ${CONFIG_TRANSMISSION_ENABLED:true}
      threadpool: ${CONFIG_TRANSMISSION_THREADPOOL_ENABLED:true}
    flowcontrol:
      enabled: ${CONFIG_FLOW_CONTROL_ENABLED:true}
      localhost: ${CONFIG_LOCALHOST_ENABLED:false}
      virtual: ${CONFIG_VIRTUAL_ENABLED:false}
    configcenter:
      enabled: ${CONFIG_CENTER_ENABLED:false}
    protect:
      enabled: ${CONFIG_PROTECT_ENABLED:false}
      mariadb: true
      postgresql: true
      opengauss: true
      mongodb: true
      redis: false
    classloader:
      enabled: ${CONFIG_CLASSLOADER_ENABLED:true}
      springboot: true
    counter:
      enabled: true
  governance:
    initializeTimeout: ${CONFIG_POLICY_INITIALIZE_TIMEOUT:10000}
    service:
      localFirst: ${CONFIG_LOCAL_FIRST:true}
      localFirstMode: ${CONFIG_LOCAL_FIRST_MODE:CELL}
      cellFailoverThresholds: ${CELL_FAILOVER_THRESHOLDS}
      serviceGroups: ${CONFIG_SERVICE_GROUPS:}
      serviceGroupOpen: ${CONFIG_SERVICE_GROUP_OPEN:true}
      responseException: ${CONFIG_RESPONSE_EXCEPTION:true}
      warmups: ${CONFIG_WARMUP_SERVICES:}
      systemPaths: ${CONFIG_SYSTEM_HTTP_PATHS}
      concurrencyLimiter:
        type: Resilience4j
        cleanInterval: 30000
        expireTime: 60000
      rateLimiter:
        type: SmoothBursty
        cleanInterval: 30000
        expireTime: 60000
      loadLimiter:
        cpuUsage: ${CONFIG_MAX_CPU_USAGE:}
        loadUsage: ${CONFIG_MAX_LOAD_USAGE:}
      circuitBreaker:
        type: Resilience4j
        cleanInterval: 30000
        expireTime: 60000
      monitor:
        forwardEnabled: ${CONFIG_MONITOR_FORWARD_TRAFFIC_ENABLED:}
        rejectEnabled: true
    live:
      fallbackLocationIfNoSpace: ${CONFIG_FALLBACK_LOCATION_IF_NO_SPACE:false}
      topics: ${CONFIG_LIVE_TOPICS}
      modifyMQGroupEnabled: ${CONFIG_LIVE_MODIFY_MQ_GROUP:false}
    lane:
      topics: ${CONFIG_LANE_TOPICS}
      modifyMQGroupEnabled: ${CONFIG_LANE_MODIFY_MQ_GROUP:false}
    router:
      virtual: ${CONFIG_VIRTUAL_SIZE:500}
      spring:
        discovery:
          disables: ${CONFIG_SPRING_DISCOVERY_DISABLES}
      phevos:
        groupExpression: ${unit}-${cell}-${group}
    transmission:
      type: ${CONFIG_TRANSMISSION_TYPE:live}
      autoDetect: ${CONFIG_TRANSMISSION_AUTO_DETECT:NONE}
      keys:
        - x-live-space-id
        - x-live-rule-id
        - x-live-uid
        - x-lane-space-id
        - x-lane-code
      prefixes:
        - x-live-
        - x-lane-
        - x-service-
      thread:
        excludeExecutors:
          - io.netty.channel.MultithreadEventLoopGroup
          - io.netty.channel.nio.NioEventLoop
          - io.netty.channel.SingleThreadEventLoop
          - io.netty.channel.kqueue.KQueueEventLoopGroup
          - io.netty.channel.kqueue.KQueueEventLoop
          - org.apache.tomcat.util.threads.ThreadPoolExecutor
          - org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor
          - org.apache.tomcat.util.threads.InlineExecutorService
          - javax.management.NotificationBroadcasterSupport$1
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoopGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.MultithreadEventLoopGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.MultithreadEventExecutorGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractEventExecutorGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.ThreadPerTaskExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.GlobalEventExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractScheduledEventExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractEventExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.SingleThreadEventLoop
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$1
          - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$ExecutorHolder
          - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor
          - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$2
          - com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor
          - com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls.ThreadlessExecutor
          - com.alibaba.nacos.shaded.io.grpc.SynchronizationContext
          - com.alibaba.nacos.shaded.com.google.common.util.concurrent.DirectExecutor
        excludeTasks:
          - com.alibaba.nacos.common.executor.NameThreadFactory
          - com.alibaba.nacos.shaded.io.grpc.internal.DnsNameResolver.Resolve
          - com.alibaba.nacos.client.naming.backups.FailoverReactor$DiskFileWriter
          - com.alibaba.nacos.client.naming.backups.FailoverReactor.SwitchRefresher
          - com.alibaba.nacos.client.naming.remote.gprc.redo.RedoScheduledTask
          - com.alibaba.nacos.shaded.io.grpc.internal.DnsNameResolver$Resolve
          - com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientTransport$5
          - com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor
          - com.alibaba.nacos.shaded.io.grpc.internal.LogExceptionRunnable
          - com.alibaba.nacos.shaded.com.google.common.util.concurrent.ThreadFactoryBuilder$1
          - com.jd.live.agent.core.thread.NamedThreadFactory
          - com.jd.jr.sgm.client.disruptor.LogEventFactory
          - com.jd.jr.sgm.client.util.AgentThreadFactory
          - com.jd.pfinder.profiler.common.util.NamedThreadFactory
          - io.opentelemetry.sdk.internal.DaemonThreadFactory
          - io.sermant.dubbo.registry.factory.RegistryNotifyThreadFactory
          - io.sermant.dynamic.config.init.DynamicConfigThreadFactory
          - io.sermant.flowcontrol.common.factory.FlowControlThreadFactory
          - io.sermant.loadbalancer.factory.LoadbalancerThreadFactory
          - io.sermant.core.utils.ThreadFactoryUtils
          - io.sermant.implement.service.xds.handler.XdsHandler.NamedThreadFactory
          - io.sermant.discovery.factory.RealmServiceThreadFactory
          - org.apache.skywalking.apm.agent.core.boot.DefaultNamedThreadFactory
          - sun.rmi.runtime.RuntimeUtil$1
          - sun.rmi.transport.tcp.TCPTransport$1
          - sun.rmi.transport.DGCImpl$1
          - sun.rmi.transport.DGCAckHandler$1
          - org.apache.tomcat.util.threads.TaskThreadFactory
        excludeExecutorPrefixes:
          - com.jd.live.agent.shaded.
        excludeTaskPrefixes:
          - reactor.core.scheduler.BoundedElasticScheduler$$Lambda
          - org.springframework.cloud.commons.util.InetUtils$$Lambda$
          - com.alibaba.nacos.client.auth.ram.identify.CredentialWatcher$
          - com.alibaba.nacos.client.naming.backups.FailoverReactor$$Lambda$
          - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate$$Lambda$
          - com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$
          - com.alibaba.nacos.common.utils.ThreadFactoryBuilder$$Lambda$
          - com.jd.live.agent.shaded.
          - org.apache.catalina.core.ContainerBase$
          - org.apache.catalina.core.StandardServer$$Lambda$
    configcenter:
      type: ${CONFIG_CENTER_TYPE:nacos}
      address: ${CONFIG_CENTER_ADDRESS:}
      username: ${CONFIG_CENTER_USERNAME:${CONFIG_USERNAME:nacos}}
      password: ${CONFIG_CENTER_PASSWORD:${CONFIG_PASSWORD:nacos}}
      refresh:
        environmentEnabled: ${CONFIG_CENTER_REFRESH_ENVIRONMENT_ENABLED:false}
        beanEnabled: ${CONFIG_CENTER_REFRESH_BEAN_ENABLED:true}
        beanNames: ${CONFIG_CENTER_REFRESH_BEAN_NAMES:}
        beanClassPrefixes: ${CONFIG_CENTER_REFRESH_BEAN_CLASS_PREFIXES:}
      names: ${CONFIG_CENTER_NAMES:}
      name:
        namespace: ${CONFIG_CENTER_NAMESPACE:public}
        name: ${CONFIG_CENTER_NAME:${APPLICATION_NAME}}
        profile: ${CONFIG_CENTER_PROFILE:DEFAULT_GROUP}
    registry:
      enabled: ${CONFIG_REGISTRY_ENABLED:false}
      clusters:
        - type: ${CONFIG_REGISTRY_TYPE_FIRST:nacos}
          address: ${CONFIG_REGISTRY_ADDRESS_FIRST}
          username: ${CONFIG_REGISTRY_USERNAME_FIRST:nacos}
          password: ${CONFIG_REGISTRY_PASSWORD_FIRST:nacos}
          namespace: ${CONFIG_REGISTRY_NAMESPACE_FIRST}
          group: ${CONFIG_REGISTRY_GROUP_FIRST}
        - type: ${CONFIG_REGISTRY_TYPE_SECOND:nacos}
          address: ${CONFIG_REGISTRY_ADDRESS_SECOND}
          username: ${CONFIG_REGISTRY_USERNAME_SECOND:nacos}
          password: ${CONFIG_REGISTRY_PASSWORD_SECOND:nacos}
          namespace: ${CONFIG_REGISTRY_NAMESPACE_SECOND}
          group: ${CONFIG_REGISTRY_GROUP_SECOND}
        - type: ${CONFIG_REGISTRY_TYPE_THIRD:nacos}
          address: ${CONFIG_REGISTRY_ADDRESS_THIRD}
          username: ${CONFIG_REGISTRY_USERNAME_THIRD:nacos}
          password: ${CONFIG_REGISTRY_PASSWORD_THIRD:nacos}
          namespace: ${CONFIG_REGISTRY_NAMESPACE_THIRD}
          group: ${CONFIG_REGISTRY_GROUP_THIRD}
  counter:
    gateway: true
    service: true
    readerInterval: 1000
    exporter:
      type: ${CONFIG_COUNTER_EXPORTER_TYPE:logging}
      endpoint: ${CONFIG_COUNTER_EXPORTER_ENDPOINT:}
      timeout: 5000
