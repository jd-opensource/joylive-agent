agent:
  enhance:
    javaVersion: '[,1.8);[1.8.0_60,]'
    retransformEnabled: true
    loggerEnabled: true
    exporterEnabled: false
    excludePrefixes: null
    excludeTypes: null
    excludeInterfaces: null
    excludeClassLoaders:
      - com.jd.jr.sgm.agent.loader.ClientLibClassLoader
      - com.jd.pfinder.profiler.load.InterceptorClassLoader
      - com.jd.pfinder.profiler.utils.ModuleClassLoader
      - com.jd.pfinder.profiler.load.ModuleInterceptorClassLoader
      - io.opentelemetry.javaagent.bootstrap.AgentClassLoader
      - org.apache.skywalking.apm.agent.core.plugin.loader.AgentClassLoader
      - org.apache.skywalking.apm.agent.core.plugin.loader.PluginClassLoader
      - com.navercorp.pinpoint.bootstrap.classloader.AgentClassLoader
      - com.navercorp.pinpoint.bootstrap.classloader.PluginClassLoader
      - com.huaweicloud.sermant.core.classloader.FrameworkClassLoader
      - com.huaweicloud.sermant.core.plugin.classloader.PluginClassLoader
      - com.huaweicloud.sermant.core.plugin.classloader.ServiceClassLoader
      - com.alipay.sofa.ark.container.service.classloader.PluginClassLoader
  publisher:
    configs:
      traffic:
        capacity: 20000
  plugin:
    systems:
      - system
    statics:
      - dubbo
      - grpc
      - httpclient
      - jdk
      - jmq
      - jsf
      - kafka
      - okhttp
      - netty
      - phevos
      - rocketmq
      - shenyu
      - sofarpc
      - spring
      - mariadb
      - mongodb
      - opengauss
      - postgresql
      - redis
    disables: null
    dynamics: null
    profiles:
      test: null
      production: null
    profile: null
  sync:
    liveSpace:
      type: ${CONFIG_LIVE_SPACE_API_TYPE:file} # [file,multilive]
      url: ${CONFIG_LIVE_SPACE_API_URL:http://api.live.local:9090/v1}
      #spacesUrl: ${CONFIG_LIVE_SPACE_API_URL}/workspaces
      #spaceUrl: ${CONFIG_LIVE_SPACE_API_URL}/workspaces/${space_id}/version/${space_version}
      #serviceUrl: ${CONFIG_LIVE_SPACE_API_URL}/services/${service_name}/version/${service_version}
      service: true
      interval: 5000
      timeout: 3000
      initialTimeout: 20000
      delay: 0
      fault: 5000
      headers: ${CONFIG_LIVE_SPACE_API_HEADERS}
    laneSpace:
      type: file
    microservice:
      enabled: true
      type: ${CONFIG_SERVICE_API_TYPE:file}
      url: ${CONFIG_SERVICE_API_URL:http://api.jmsf.local:8080/v1}
      headers: ${CONFIG_SERVICE_API_HEADERS}
  watchdog:
    enabled: true
    delay: 5000
    interval: 100
    timeout: 5000
  switch:
    live:
      enabled: ${CONFIG_LIVE_ENABLED:true}
      mq: ${CONFIG_LIVE_MQ_ENABLED:false}
      dubbo: true
      sofarpc: true
      jsf: true
      spring: true
      phevos: true
      rocketmq: true
    lane:
      enabled: ${CONFIG_LANE_ENABLED:false}
    transmission:
      enabled: ${CONFIG_TRANSMISSION_ENABLED:true}
      threadpool: ${CONFIG_TRANSMISSION_THREADPOOL_ENABLED:true}
    registry:
      enabled: ${CONFIG_REGISTRY_ENABLED:true}
    flowcontrol:
      enabled: ${CONFIG_FLOW_CONTROL_ENABLED:true}
      localhost: ${CONFIG_LOCALHOST_ENABLED:false}
      virtualthread: ${CONFIG_VIRTUAL_THREAD_ENABLED:false}
    protect:
      enabled: ${CONFIG_PROTECT_ENABLED:false}
      mariadb: true
      postgresql: true
      opengauss: true
      mongodb: true
      redis: false
    classloader:
      enabled: ${CONFIG_CLASSLOADER_ENABLED:true}
      springboot: true
    counter:
      enabled: true
  governance:
    initializeTimeout: ${CONFIG_POLICY_INITIALIZE_TIMEOUT:10000}
    service:
      warmups: ${CONFIG_WARMUP_SERVICES:}
      concurrencyLimiter:
        type: Resilience4j
        cleanInterval: 30000
        expireTime: 60000
      rateLimiter:
        type: Resilience4j
        cleanInterval: 30000
        expireTime: 60000
      circuitBreaker:
        type: Resilience4j
        cleanInterval: 30000
        expireTime: 60000
      monitor:
        forwardEnabled: ${CONFIG_MONITOR_FORWARD_TRAFFIC_ENABLED:}
        rejectEnabled: true
    live:
      topics: ${CONFIG_LIVE_TOPICS}
      modifyMQGroupEnabled: ${CONFIG_LIVE_MODIFY_MQ_GROUP:true}
    lane:
      topics: ${CONFIG_LANE_TOPICS}
      modifyMQGroupEnabled: ${CONFIG_LANE_MODIFY_MQ_GROUP:true}
    router:
      spring:
        discovery:
          disables: ${CONFIG_SPRING_DISCOVERY_DISABLES}
      phevos:
        groupExpression: ${unit}-${cell}-${group}
    transmission:
      keys:
        - x-live-space-id
        - x-live-rule-id
        - x-live-uid
        - x-lane-space-id
        - x-lane-code
      prefixes:
        - x-live-
        - x-lane-
        - x-service-
      thread:
        excludeExecutors:
          - org.apache.dubbo.common.threadpool.ThreadlessExecutor
          - org.apache.tomcat.util.threads.ThreadPoolExecutor
          - org.apache.tomcat.util.threads.ScheduledThreadPoolExecutor
          - org.apache.tomcat.util.threads.InlineExecutorService
          - javax.management.NotificationBroadcasterSupport$1
          - io.grpc.stub.ClientCalls.ThreadlessExecutor
          - io.grpc.SynchronizationContext
          - io.netty.channel.MultithreadEventLoopGroup
          - io.netty.channel.nio.NioEventLoop
          - io.netty.channel.SingleThreadEventLoop
          - io.netty.channel.kqueue.KQueueEventLoopGroup
          - io.netty.channel.kqueue.KQueueEventLoop
          - io.netty.util.concurrent.MultithreadEventExecutorGroup
          - io.netty.util.concurrent.AbstractEventExecutorGroup
          - io.netty.util.concurrent.ThreadPerTaskExecutor
          - io.netty.util.concurrent.GlobalEventExecutor
          - io.netty.util.concurrent.AbstractScheduledEventExecutor
          - io.netty.util.concurrent.AbstractEventExecutor
          - io.netty.util.concurrent.DefaultEventExecutor
          - io.netty.util.concurrent.SingleThreadEventExecutor
          - io.netty.util.internal.ThreadExecutorMap$1
          - reactor.core.scheduler.BoundedElasticScheduler$BoundedScheduledExecutorService
          - reactor.netty.resources.ColocatedEventLoopGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoopGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.MultithreadEventLoopGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.MultithreadEventExecutorGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractEventExecutorGroup
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.ThreadPerTaskExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.GlobalEventExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractScheduledEventExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.AbstractEventExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.nio.NioEventLoop
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.channel.SingleThreadEventLoop
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor
          - com.alibaba.nacos.shaded.io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$1
          - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$ExecutorHolder
          - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor
          - com.alibaba.nacos.shaded.io.grpc.internal.ManagedChannelImpl$2
          - com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor
          - com.alibaba.nacos.shaded.io.grpc.stub.ClientCalls.ThreadlessExecutor
          - com.alibaba.nacos.shaded.io.grpc.SynchronizationContext
          - com.alibaba.nacos.shaded.com.google.common.util.concurrent.DirectExecutor
        excludeTasks:
          - com.alibaba.nacos.shaded.io.grpc.internal.DnsNameResolver.Resolve
          - com.alibaba.nacos.client.naming.backups.FailoverReactor$DiskFileWriter
          - com.alibaba.nacos.client.naming.backups.FailoverReactor.SwitchRefresher
          - com.alibaba.nacos.client.naming.remote.gprc.redo.RedoScheduledTask
          - com.alibaba.nacos.shaded.io.grpc.internal.DnsNameResolver$Resolve
          - com.alibaba.nacos.shaded.io.grpc.internal.DelayedClientTransport$5
          - com.alibaba.nacos.shaded.io.grpc.internal.SerializingExecutor
          - com.alibaba.nacos.shaded.io.grpc.internal.LogExceptionRunnable
          - com.jd.live.agent.core.thread.NamedThreadFactory
        excludeTaskPrefixes:
          - reactor.core.scheduler.BoundedElasticScheduler$$Lambda
          - org.springframework.cloud.commons.util.InetUtils$$Lambda$
          - com.alibaba.nacos.client.auth.ram.identify.CredentialWatcher$
          - com.alibaba.nacos.client.naming.backups.FailoverReactor$$Lambda$
          - com.alibaba.nacos.client.naming.remote.NamingClientProxyDelegate$$Lambda$
          - com.alibaba.nacos.common.remote.client.RpcClient$$Lambda$
          - com.alibaba.nacos.common.utils.ThreadFactoryBuilder$$Lambda$
          - sun.rmi.transport.tcp.TCPTransport$
          - sun.rmi.transport.DGCImpl$
          - sun.rmi.transport.DGCAckHandler$
  counter:
    gateway: true
    service: true
    readerInterval: 1000
    exporter:
      type: ${CONFIG_COUNTER_EXPORTER_TYPE:logging}
      endpoint: ${CONFIG_COUNTER_EXPORTER_ENDPOINT:}
      timeout: 5000
